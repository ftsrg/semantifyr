{
  "scopeName": "source.gamma",
  "name": "gammma",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#types"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.xsts",
          "match": "\\b(expression|var|assign|and|or|package|sync|statechart|timeout|region|state|entry|exit|transition|when|to|in|event|out|raise|set|component|channel|verification|reachable|case)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.xsts",
          "match": "(==|!=|<=|>=|<|>|\\+|-|&&|\\|\\|)"
        },
        {
          "name": "keyword.operator.assignment.xsts",
          "match": ":="
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.xsts",
          "match": "\\b(Integer|Boolean)\\b"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.xsts",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.language.boolean.xsts",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.xsts",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.double-slash.xsts",
          "match": "//.*$"
        }
      ]
    }
  }
}
