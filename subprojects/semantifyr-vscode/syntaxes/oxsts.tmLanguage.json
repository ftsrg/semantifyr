{
  "scopeName": "source.oxsts",
  "name": "Oxsts",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#types"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.oxsts",
          "match": "\\b(neg|constraint|abstract|package|or|import|enum|static|inline|seq|ctrl|as|assume|var|type|target|feature|containment|reference|derived|instance|association|pattern|init|havoc|tran|choice|if|else|find|virtual|override|prop)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.oxsts",
          "match": "(==|!=|<=|>=|<|>|\\+|-|&&|\\|\\|)"
        },
        {
          "name": "keyword.operator.assignment.oxsts",
          "match": ":="
        },
        {
          "name": "keyword.operator.multiplicity.oxsts",
          "match": "(\\[0\\.\\.1\\]|\\[1\\.\\.1\\]|\\[0\\.\\*\\]|\\[1\\.\\*\\])"
        },
        {
          "name": "keyword.operator.transitive.oxsts",
          "match": "(\\+|\\*)"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.oxsts",
          "match": "\\b(Integer|Boolean|Self|Nothing)\\b"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.oxsts",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.language.boolean.oxsts",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.oxsts",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.double-slash.oxsts",
          "match": "//.*$"
        }
      ]
    }
  }
}
